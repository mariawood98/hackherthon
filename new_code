#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Mar  7 09:20:53 2021

@author: madeleinejenkins
"""
from kivy.app import App
from kivy.lang import Builder
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.uix.widget import Widget
from kivy.properties import ObjectProperty, NumericProperty, StringProperty
import kivy 
  
kivy.require("1.9.1") 


import pywhatkit as kit
import datetime
import geocoder
now = datetime.datetime.now()
g = geocoder.ip('me')
import speech_recognition as sr


kv = Builder.load_string("""                         
WindowManager:
    MenuScreen:
        id: name
        name: 'menu'
    MainWindow:
        id: main
        name: 'Mainwindow'
    SecondWindow:
        id: second
        name: 'Secondwindow'
        
<MenuScreen>:
    BoxLayout:
        Button:
            text: 'Settings'
            on_release: 
                root.manager.current = 'Mainwindow'
                #root.manager.ids.settings.func_settings(self)    # optional: passing Button instance
                
        Button:
            text: 'Push me!'
            on_release: 
                root.callback()
                #root.manager.ids.settings.func_pushme(self)    # optional: passing Button instance

<MainWindow>:
    last_name_text_input: last_name
    GridLayout:
        cols:1

        GridLayout:
            cols: 2

            Label:
                text: "Enter phrase: "

            TextInput:
                id: last_name
                multiline: False

        Button:
            text: "Submit"
            on_release:
                root.submit_surname()
        Button:
            text: "Return"
            on_release: 
                root.manager.current = 'menu'


<SecondWindow>:


    Button:
        text: "Go Back"
        on_release:
            app.root.current = "main"
            root.manager.transition.direction = "right"
            """)
        
       
class MenuScreen(Screen):
    def callback(self): 
            r1 = sr.Recognizer()
            r2 = sr.Recognizer()
            with sr.Microphone() as source:
                 print('[hi]')
                 print('speak now')
                 audio = r1.listen(source)    
            if self.surname in r2.recognize_google(audio):
                r2 = sr.Recognizer()
                print("speak again")
                with sr.Microphone() as source:        
                    audio = r2.listen(source)
                    if self.trigger1 in r2.recognize_google(audio):
                        kit.sendwhatmsg(self.contact_number1, "hi I am scared. my location is: "+str(g.latlng), now.hour, now.minute +2)
                    elif self.trigger2 in r2.recognize_google(audio):
                        kit.sendwhatmsg(self.contact_number2, "hi I am scared. my location is: "+str(g.latlng), now.hour, now.minute +2)



class MainWindow(Screen,Widget):
        last_name_text_input = ObjectProperty()
        ego = NumericProperty(0)
        surname = StringProperty('')
        def submit_surname(self):
                self.surname = self.last_name_text_input.text
                print("Assign surname: {}".format(self.surname))
                self.save()
                self.surname = ''
                print("Reset surname: {}".format(self.surname))
                self.load()
                print("Loaded surname: {}".format(self.surname))

        def save(self):
            with open("surname.txt", "w") as fobj:
                fobj.write(str(self.surname))

        def load(self):
            with open("surname.txt") as fobj:
                for surname in fobj:
                    self.surname = surname.rstrip()

class SecondWindow(Screen):
    pass


class WindowManager(ScreenManager):
    pass





class MyMainApp(App):
    def build(self):
        return kv


if __name__ == "__main__":
    MyMainApp().run()